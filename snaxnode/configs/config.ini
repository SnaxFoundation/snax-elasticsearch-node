# the endpoint upon which to listen for incoming connections (snax::bnet_plugin)
# bnet-endpoint = 0.0.0.0:4321

# the number of threads to use to process network messages (snax::bnet_plugin)
# bnet-threads =

# remote endpoint of other node to connect to; Use multiple bnet-connect options as needed to compose a network (snax::bnet_plugin)
# bnet-connect =

# this peer will request no pending transactions from other nodes (snax::bnet_plugin)
# bnet-no-trx = false

# the location of the blocks directory (absolute path or relative to application data dir) (snax::chain_plugin)
blocks-dir = "/opt/snax/data/blocks"

# Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints. (snax::chain_plugin)
# checkpoint =

# Override default WASM runtime (snax::chain_plugin)
# wasm-runtime =

# Maximum size (in MB) of the chain state database (snax::chain_plugin)
chain-state-db-size-mb = 30000

# Maximum size (in MB) of the reversible blocks database (snax::chain_plugin)
reversible-blocks-db-size-mb = 3400

# print contract's output to console (snax::chain_plugin)
# contracts-console = true

# Account added to actor whitelist (may specify multiple times) (snax::chain_plugin)
# actor-whitelist =

# Account added to actor blacklist (may specify multiple times) (snax::chain_plugin)
# actor-blacklist =

# Contract account added to contract whitelist (may specify multiple times) (snax::chain_plugin)
# contract-whitelist =

# Contract account added to contract blacklist (may specify multiple times) (snax::chain_plugin)
# contract-blacklist =

# Track actions which match receiver:action:actor. Actor may be blank to include all. Receiver and Action may not be blank. (snax::history_plugin)
# filter-on =

# PEM encoded trusted root certificate (or path to file containing one) used to validate any TLS connections made.  (may specify multiple times)
#  (snax::http_client_plugin)
# https-client-root-cert =

# true: validate that the peer certificates are valid and trusted, false: ignore cert errors (snax::http_client_plugin)
# https-client-validate-peers = 1

# The local IP and port to listen for incoming http connections; set blank to disable. (snax::http_plugin)
http-server-address = 0.0.0.0:8888

# The local IP and port to listen for incoming https connections; leave blank to disable. (snax::http_plugin)
# https-server-address =

# Filename with the certificate chain to present on https connections. PEM format. Required for https. (snax::http_plugin)
# https-certificate-chain-file =

# Filename with https private key in PEM format. Required for https (snax::http_plugin)
# https-private-key-file =

# Specify the Access-Control-Allow-Origin to be returned on each request. (snax::http_plugin)
access-control-allow-origin = *

# Specify the Access-Control-Allow-Headers to be returned on each request. (snax::http_plugin)
# access-control-allow-headers = *

# Specify the Access-Control-Max-Age to be returned on each request. (snax::http_plugin)
# access-control-max-age =

# Specify if Access-Control-Allow-Credentials: true should be returned on each request. (snax::http_plugin)
access-control-allow-credentials = false

# The actual host:port used to listen for incoming p2p connections. (snax::net_plugin)
p2p-listen-endpoint = 0.0.0.0:9876

# An externally accessible host:port for identifying this node. Defaults to p2p-listen-endpoint. (snax::net_plugin)
# p2p-server-address =

# The public endpoint of a peer node to connect to. Use multiple p2p-peer-address options as needed to compose a network. (snax::net_plugin)
# p2p-peer-address =

# Maximum number of client0nodes from any single IP address (snax::net_plugin)
p2p-max-nodes-per-host = 200

# The name supplied to identify this node amongst the peers. (snax::net_plugin)
#agent-name = "SNAX Test Agent"

# Can be 'any' or 'producers' or 'specified' or 'none'. If 'specified', peer-key must be specified at least once. If only 'producers', peer-key is not required. 'producers' and 'specified' may be combined. (snax::net_plugin)
allowed-connection = any

# Optional public key of peer allowed to connect.  May be used multiple times. (snax::net_plugin)
# peer-key =

# Tuple of [PublicKey, WIF private key] (may specify multiple times) (snax::net_plugin)
# peer-private-key =

# Maximum number of clients from which connections are accepted, use 0 for no limit (snax::net_plugin)
max-clients = 200

# number of seconds to wait before cleaning up dead connections (snax::net_plugin)
connection-cleanup-period = 30

# True to require exact match of peer network version. (snax::net_plugin)
network-version-match = 0

# number of blocks to retrieve in a chunk from any individual peer during synchronization (snax::net_plugin)
sync-fetch-span = 100

# maximum sizes of transaction or block messages that are sent without first sending a notice (snax::net_plugin)
max-implicit-request = 1500

# Enable block production, even if the chain is stale. (snax::producer_plugin)
enable-stale-production = false

# Start this node in a state where production is paused (snax::producer_plugin)
pause-on-startup = false

# Limits the maximum time (in milliseconds) that is allowed a pushed transaction's code to execute before being considered invalid (snax::producer_plugin)
max-transaction-time = 30000

# Limits the maximum age (in seconds) of the DPOS Irreversible Block for a chain this node will produce blocks on (use negative value to indicate unlimited) (snax::producer_plugin)
max-irreversible-block-age = -1

# ID of producer controlled by this node (e.g. inita; may specify multiple times) (snax::producer_plugin)
# producer-name =

# (DEPRECATED - Use signature-provider instead) Tuple of [public key, WIF private key] (may specify multiple times) (snax::producer_plugin)
# private-key =

# Key=Value pairs in the form <public-key>=<provider-spec>
# Where:
#    <public-key>    	is a string form of a vaild SNAX public key
#
#    <provider-spec> 	is a string in the form <provider-type>:<data>
#
#    <provider-type> 	is KEY, or KXD
#
#    KEY:<data>      	is a string form of a valid SNAX private key which maps to the provided public key
#
#    KXD:<data>    	is the URL where kxd is available and the approptiate wallet(s) are unlocked (snax::producer_plugin)
#signature-provider = SNAX6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV=KEY:5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3

# Limits the maximum time (in milliseconds) that is allowd for sending blocks to a kxd provider for signing (snax::producer_plugin)
kxd-provider-timeout = 40

# Lag in number of blocks from the head block when selecting the reference block for transactions (-1 means Last Irreversible Block) (snax::txn_test_gen_plugin)
txn-reference-block-lag = 0

# The path of the wallet files (absolute path or relative to application data dir) (snax::wallet_plugin)
#wallet-dir = "."

# Timeout for unlocked wallet in seconds (default 900 (15 minutes)). Wallets will automatically lock after specified number of seconds of inactivity. Activity is defined as any wallet command e.g. list-wallets. (snax::wallet_plugin)
#unlock-timeout = 900

# snax key that will be imported automatically when a wallet is created. (snax::wallet_plugin)
# snax-key =

# Plugin(s) to enable, may be specified multiple times
# plugin =
# plugin = snax::producer_plugin
plugin = snax::chain_api_plugin
plugin = snax::http_plugin
p2p-peer-address=18.194.132.186:9876
p2p-peer-address=80.66.90.29:9876
p2p-peer-address=92.53.79.186:9876
p2p-peer-address=92.53.79.190:9876
p2p-peer-address=snax.eossweden.eu:9022
p2p-peer-address=snax-mainnet-p2p.eosarabia.one:7883
p2p-peer-address=snax-peer1.eoskh.com:8977
p2p-peer-address=snax-peer3.eoskh.com:8947
p2p-peer-address=213.133.102.220:9876
p2p-peer-address=95.216.224.96:9876
p2p-peer-address=snaxp2p.eclipse24.io:9877
p2p-peer-address=snax.eosnairobi.io:7276
p2p-peer-address=95.216.245.221:5032
p2p-peer-address=sxn1.eosviet.io:8948
p2p-peer-address=sxn3.eosviet.io:8978
p2p-peer-address=p1-snax.eosph.io:8949
p2p-peer-address=p3-snax.eosph.io:8979
p2p-peer-address=speer1.nodeone.io:8976
p2p-peer-address=speer3.nodeone.io:8946
p2p-peer-address=p2p.snax.telosunlimited.io:9876
p2p-peer-address=snaxbp.germaneos.de:7777
p2p-peer-address=peer.snax-mainnet.eosblocksmith.io:9876
p2p-peer-address=144.76.155.18:9876

plugin = snax::net_api_plugin
plugin = snax::history_api_plugin
plugin = snax::elasticsearch_plugin
elastic-filter-on = *
abi-serializer-max-time-ms = 100000
elastic-bulk-size-mb = 1
elastic-thread-pool-size = 16
elastic-filter-out = snax.token:transfer:snax.vpay
elastic-filter-out = snax.token:transfer:snax.bpay
elastic-filter-out = snax.token:transfer:snax
elastic-filter-out = snax.vpay:transfer:
elastic-filter-out = snax.bpay:transfer:
elastic-filter-out = snax:onblock:
elastic-filter-out = :onblock:
elastic-filter-out = :issue:vpay
elastic-filter-out = :issue:bpay
elastic-filter-out = snax.null:nonce:
elastic-filter-out = p.twitter:updatearmult:
elastic-filter-out = p.steemit:updatearmult:
read-mode = read-only
